name: Build and Deploy Pixiv Standalone Scanner

on:
  push:
    tags:
      - 'scanner/v*.*.*' # 触发条件：推送 scanner 版本标签
  workflow_dispatch: # 手动触发

env:
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: pixishelf-scanner

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Scanner
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GITHUB }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag,prefix=scanner-
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=scanner-sha-

      - name: Build and push Scanner image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/pixiv-standalone-scanner
          file: ./packages/pixiv-standalone-scanner/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_GITHUB }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY_GITHUB }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:cache,mode=max
          platforms: linux/amd64,linux/arm64

  # 安全扫描作业 (扫描 Scanner 镜像)
  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/scanner/')
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Run Trivy vulnerability scanner for Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY_GITHUB }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest'
          format: 'sarif'
          output: 'trivy-scanner-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-scanner-results.sarif'
