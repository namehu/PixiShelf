version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pixishelf-db
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pixishelf
      POSTGRES_USER: pixishelf
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pixishelf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pixishelf -d pixishelf"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API service
  api:
    build:
      context: ..
      dockerfile: build/Dockerfile
      target: api
    container_name: pixishelf-api
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://pixishelf:password@postgres:5432/pixishelf
      JWT_SECRET: your-jwt-secret-here-change-in-production
      API_KEY: your-api-key-here-change-in-production
      INIT_ADMIN_USERNAME: admin
      INIT_ADMIN_PASSWORD: admin123
      SCAN_PATH: /app/data
    volumes:
      - ./data:/app/data:ro  # 只读挂载图片目录
    networks:
      - pixishelf-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Frontend web service
  web:
    build:
      context: ..
      dockerfile: build/Dockerfile
      target: web
      args:
        VITE_API_URL: http://localhost:3002  # 这里设置为外部访问的API地址
    container_name: pixishelf-web
    ports:
      - "3000:80"  # nginx默认监听80端口
    networks:
      - pixishelf-network
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  pixishelf-network:
    driver: bridge