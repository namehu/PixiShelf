# API Server Configuration
DATABASE_URL="postgresql://artisan:password@localhost:5432/artisan_shelf?schema=public"
API_PORT=3002
API_HOST=0.0.0.0
NODE_ENV=development

# API Security
API_KEY=dev-artisan-api-key-123

# Scanner Configuration
# SCAN_PATH=D:\Pictures\Art_Collection
#如何在 Docker 挂载场景下配置
#
#- 宿主机路径 -> 容器路径的挂载
#  - 假设宿主机图片目录是 D:\Pictures\Art_Collection
#  - 将它挂载到容器内的统一目录（例如 /data/images），挂载只读更安全（:ro）
#- 容器内 SCAN_PATH 设置
#  - 容器环境变量 SCAN_PATH=/data/images
#  - 你在 `.env` 中写的是本地开发配置；若用 Docker 跑 API，确保容器内传入的 SCAN_PATH 指向容器里的挂载目录（不是宿主机路径）
#- 图片访问路径
#  - 入库后 Image.path 是相对路径，如 Monet/WaterLilies/001.jpg
#  - 访问 URL 统一为：http://
#    :
#    /api/v1/images/Monet/WaterLilies/001.jpg
#
# 两种运行模式下的建议
#
#- 本机直跑（非 Docker）
#  - SCAN_PATH=宿主机的图片绝对路径（如 D:\Pictures\Art_Collection）
#  - 路由读取即基于本机文件系统
#- 容器运行 API（Docker）
#  - 将宿主机目录挂载到容器：-v D:\Pictures\Art_Collection:/data/images:ro
#  - SCAN_PATH=/data/images
# - 其他不变，前端访问路径不变
SCAN_PATH=C:\Users\pc\Downloads\pixiv


SCAN_INTERVAL_HOURS=0